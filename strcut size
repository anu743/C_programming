#include<stdio.h>

strcut stack
{
  int top; // 4 bytes
  unsigned capacity; //4 bytes
  int *array; // 8 bytes
};

int main()
{  
  struct stack s1;
  printf("%ul\n",sizeof(s1));  // 16 bytes

    s1.array = (int *)malloc(20);
    
   
  
    printf("\n%lu\n",sizeof(s1)); // 16 bytes
    printf("%ld\n",sizeof(s1.array)); //8 bytes
    
  printf("%ul\n",sizeof(struct stack)); //16 bytes
  return 0;
}
// sometimes the size of the struct is differ from the indivial members size because in struct sometimes c compliler add the padding elements
// if the struct memeber perevious is larger data type then next on , then padding will not be added , otherwise padding will be addded
// int a, char b; // here padding 1 byte will be added
